using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EasyCrud.Models
{
    public abstract class ModelBase<TIndexType> : IModel<TIndexType>
    {
        public abstract bool KeyIsAutogenerated();

        public abstract TIndexType GetKey();

        public abstract void SetKey(TIndexType value);

        public abstract bool KeyEqual(TIndexType value);

        public abstract TIndexType GetInvalidKey();

        public abstract bool ContentsEqual(IModel<TIndexType> input);

        protected bool CompareProperties<TModelType, TPropertyType>(TModelType firstItem, TModelType secondItem, Func<TModelType, TPropertyType>[] propertySelectors, Func<TPropertyType, TPropertyType, bool> comparerFunction) where TModelType : ModelBase<TIndexType>
        {
            foreach (var i in propertySelectors)
            {
                var firstProperty = i(firstItem);
                var secondProperty = i(secondItem);
                if (comparerFunction(firstProperty, secondProperty) == false)
                {
                    return false;
                }
            }

            return true;
        }
    }
}
